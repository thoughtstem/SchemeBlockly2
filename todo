Refactor into Purescript
  > 2-way parsing UI still needs work 
    > Now that the Ace editor is there, there's some kind of infinite loop.  Keeps firing onChange events and keeps getting new values passed in.  




  > Working with blockly is a nightmare 
    > Parameter mutation is broken    
    > Can it just be reactive to a document change?  Or  write our own?
 

  > Allow whitespace/padding in scheme editor
    > Don't reset with changes to blockly

  > Allow free positioning in blockly
    > Don't reset x and y positions with changes to scheme




  > Execution and output.  Write interpreter?
    > Show execution steps, expression simplification
    > Draw the pretty pictures on a canvas?
    > Or ship to unity for execution in voxl
    > Or ship to ltm for execution on mc server

    > Support more Scheme (function defs?  Ifs?  )
      * Use existing interpreter?


  > generate new function definitions from code (define ...) -> Infer type, Place in toolbox

  > Use function definitions to 
     > set blockly toolbox
       > Categorize by output type and input type
    
     > tell blockly what the inputs and outputs are
       > via mutation 
    

 






collapsable blockly blocks
  > Factor functions into different "files"  Or otherwise be able to hide things...

saving/loading code

bug: mutating disconnects blocks

bug: extra scheme inputs not passed to javascript function

make prettier layout

auto code-tidying in text editor
  folding

more htdp functions implemented
  > Be able to switch between function defs and implementations...

figure out animation framework

type inference
  polymorphic blocks

catch infinite loops in live coding

auto-generate problems.
Auto-generate code.


Bigger goals:

* Work with WeScheme people?  Grant?
  * Make Scratch clone
  * Make new curriculum for kids

* Integrate with CodeSpells
* Integrate with LearnToMod
* Integrate with Vox-L



Research Ideas:

* Pictures that draw pictures
